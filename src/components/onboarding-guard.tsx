import { redirect } from 'next/navigation'
import { hasSuperAdmin } from '@/features/admin/actions/onboarding'

interface OnboardingGuardProps {
  children: React.ReactNode
}

/**
 * Composant guard qui v√©rifie si l'onboarding est n√©cessaire
 * Si aucun superadmin n'existe, redirige vers /onboarding
 * Sinon, affiche les enfants normalement
 */
export async function OnboardingGuard({ children }: OnboardingGuardProps) {
  // Mode debug : bypass en d√©veloppement si explicitement configur√©
  if (process.env.NODE_ENV === 'development' && process.env.BYPASS_ONBOARDING === 'true') {
    console.log('üîß [OnboardingGuard] Bypass activ√© en mode d√©veloppement')
    return <>{children}</>
  }

  try {
    const hasAdmin = await hasSuperAdmin()
    
    if (!hasAdmin) {
      console.log('‚ùå [OnboardingGuard] Aucun superadmin trouv√©, redirection vers /onboarding')
      redirect('/onboarding')
    }

    return <>{children}</>
  } catch (error) {
    console.error('üî• [OnboardingGuard] Erreur lors de la v√©rification:', error)
    redirect('/onboarding')
  }
} 